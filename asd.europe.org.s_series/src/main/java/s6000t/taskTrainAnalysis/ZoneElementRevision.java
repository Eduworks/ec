/**
 *
 * Generated by JaxbToStjsAssimilater.
 * Assimilation Date: Mon Jul 29 11:33:23 CDT 2019
 *
 **/

package s6000t.taskTrainAnalysis;

import org.cassproject.schema.general.EcRemoteLinkedData;
import org.stjs.javascript.Array;

public class ZoneElementRevision extends EcRemoteLinkedData {

    protected BreakdownElementRevisionIdentifier beRevId;
    protected BreakdownElementRevisionStatus status;
    protected MaintenanceSignificantOrRelevant msi;
    protected BreakdownElementRevisionCreationDate beRevDate;
    protected ZoneElementDescription beDescr;
    protected Array<FunctionalFailure> funcFail;
    protected Array<BreakdownElementRevisionRelationship> beRel;
    protected LsaCandidateIndicator lsaCand;
    protected LsaCandidateRationale candRtnl;
    protected Array<LsaCandidateMaintenanceConcept> maintCpt;
    protected Array<LsaCandidateMaintenanceSolution> maintSln;
    protected Array<ZoneElementRevision.SrvLife> productServiceLife;
    protected Array<ZoneElementRevision.SmInt> scheduledMaintenanceInterval;
    protected Array<ZoneElementRevision.Mfop> maintenanceFreeOperatingPeriod;
    protected Array<ZoneElementRevision.Dt> downTime;
    protected Array<ZoneElementRevision.Mmhoh> maintenanceManHoursPerOperatingHour;
    protected Array<ZoneElementRevision.Mtbur> meanTimeBetweenUnscheduledRemoval;
    protected Array<ZoneElementRevision.Mttr> meanTimeToRepair;
    protected Array<ZoneElementRevision.Dmc> directMaintenanceCost;
    protected Array<ZoneElementRevision.Spt> shopProcessingTime;
    protected Array<ZoneElementRevision.Foh> failuresPerOperatingHour;
    protected Array<ZoneElementRevision.Rplt> replacementTime;
    protected Array<ZoneElementRevision.Lcc> lifeCycleCost;
    protected Array<ZoneElementRevision.Mtbf> meanTimeBetweenFailure;
    protected Array<ZoneElementRevision.FRate> failureRate;
    protected LsaCandidateAnalysisActivities anlysActvty;
    protected Array<TaskRequirementTarget> taskReq;
    protected Array<Object> taskTargetNonAbstractClasses;
    protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
    protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
    protected ZoneElementRevision.DmgAnlys dmgAnlys;
    protected ZoneElementRevision.FailModes failModes;
    protected ZoneElementRevision.DetectMnCaps detectMnCaps;
    protected String uid;
    protected CrudCodeValues crud;

    public BreakdownElementRevisionIdentifier getBeRevId() {
        return beRevId;
    }

    public void setBeRevId(BreakdownElementRevisionIdentifier value) {
        this.beRevId = value;
    }

    public BreakdownElementRevisionStatus getStatus() {
        return status;
    }

    public void setStatus(BreakdownElementRevisionStatus value) {
        this.status = value;
    }

    public MaintenanceSignificantOrRelevant getMsi() {
        return msi;
    }

    public void setMsi(MaintenanceSignificantOrRelevant value) {
        this.msi = value;
    }

    public BreakdownElementRevisionCreationDate getBeRevDate() {
        return beRevDate;
    }

    public void setBeRevDate(BreakdownElementRevisionCreationDate value) {
        this.beRevDate = value;
    }

    public ZoneElementDescription getBeDescr() {
        return beDescr;
    }

    public void setBeDescr(ZoneElementDescription value) {
        this.beDescr = value;
    }

    public Array<FunctionalFailure> getFuncFail() {
        if (funcFail == null) {
            funcFail = new Array<FunctionalFailure>();
        }
        return this.funcFail;
    }

    public Array<BreakdownElementRevisionRelationship> getBeRel() {
        if (beRel == null) {
            beRel = new Array<BreakdownElementRevisionRelationship>();
        }
        return this.beRel;
    }

    public LsaCandidateIndicator getLsaCand() {
        return lsaCand;
    }

    public void setLsaCand(LsaCandidateIndicator value) {
        this.lsaCand = value;
    }

    public LsaCandidateRationale getCandRtnl() {
        return candRtnl;
    }

    public void setCandRtnl(LsaCandidateRationale value) {
        this.candRtnl = value;
    }

    public Array<LsaCandidateMaintenanceConcept> getMaintCpt() {
        if (maintCpt == null) {
            maintCpt = new Array<LsaCandidateMaintenanceConcept>();
        }
        return this.maintCpt;
    }

    public Array<LsaCandidateMaintenanceSolution> getMaintSln() {
        if (maintSln == null) {
            maintSln = new Array<LsaCandidateMaintenanceSolution>();
        }
        return this.maintSln;
    }

    public Array<ZoneElementRevision.SrvLife> getProductServiceLife() {
        if (productServiceLife == null) {
            productServiceLife = new Array<ZoneElementRevision.SrvLife>();
        }
        return this.productServiceLife;
    }

    public Array<ZoneElementRevision.SmInt> getScheduledMaintenanceInterval() {
        if (scheduledMaintenanceInterval == null) {
            scheduledMaintenanceInterval = new Array<ZoneElementRevision.SmInt>();
        }
        return this.scheduledMaintenanceInterval;
    }

    public Array<ZoneElementRevision.Mfop> getMaintenanceFreeOperatingPeriod() {
        if (maintenanceFreeOperatingPeriod == null) {
            maintenanceFreeOperatingPeriod = new Array<ZoneElementRevision.Mfop>();
        }
        return this.maintenanceFreeOperatingPeriod;
    }

    public Array<ZoneElementRevision.Dt> getDownTime() {
        if (downTime == null) {
            downTime = new Array<ZoneElementRevision.Dt>();
        }
        return this.downTime;
    }

    public Array<ZoneElementRevision.Mmhoh> getMaintenanceManHoursPerOperatingHour() {
        if (maintenanceManHoursPerOperatingHour == null) {
            maintenanceManHoursPerOperatingHour = new Array<ZoneElementRevision.Mmhoh>();
        }
        return this.maintenanceManHoursPerOperatingHour;
    }

    public Array<ZoneElementRevision.Mtbur> getMeanTimeBetweenUnscheduledRemoval() {
        if (meanTimeBetweenUnscheduledRemoval == null) {
            meanTimeBetweenUnscheduledRemoval = new Array<ZoneElementRevision.Mtbur>();
        }
        return this.meanTimeBetweenUnscheduledRemoval;
    }

    public Array<ZoneElementRevision.Mttr> getMeanTimeToRepair() {
        if (meanTimeToRepair == null) {
            meanTimeToRepair = new Array<ZoneElementRevision.Mttr>();
        }
        return this.meanTimeToRepair;
    }

    public Array<ZoneElementRevision.Dmc> getDirectMaintenanceCost() {
        if (directMaintenanceCost == null) {
            directMaintenanceCost = new Array<ZoneElementRevision.Dmc>();
        }
        return this.directMaintenanceCost;
    }

    public Array<ZoneElementRevision.Spt> getShopProcessingTime() {
        if (shopProcessingTime == null) {
            shopProcessingTime = new Array<ZoneElementRevision.Spt>();
        }
        return this.shopProcessingTime;
    }

    public Array<ZoneElementRevision.Foh> getFailuresPerOperatingHour() {
        if (failuresPerOperatingHour == null) {
            failuresPerOperatingHour = new Array<ZoneElementRevision.Foh>();
        }
        return this.failuresPerOperatingHour;
    }

    public Array<ZoneElementRevision.Rplt> getReplacementTime() {
        if (replacementTime == null) {
            replacementTime = new Array<ZoneElementRevision.Rplt>();
        }
        return this.replacementTime;
    }

    public Array<ZoneElementRevision.Lcc> getLifeCycleCost() {
        if (lifeCycleCost == null) {
            lifeCycleCost = new Array<ZoneElementRevision.Lcc>();
        }
        return this.lifeCycleCost;
    }

    public Array<ZoneElementRevision.Mtbf> getMeanTimeBetweenFailure() {
        if (meanTimeBetweenFailure == null) {
            meanTimeBetweenFailure = new Array<ZoneElementRevision.Mtbf>();
        }
        return this.meanTimeBetweenFailure;
    }

    public Array<ZoneElementRevision.FRate> getFailureRate() {
        if (failureRate == null) {
            failureRate = new Array<ZoneElementRevision.FRate>();
        }
        return this.failureRate;
    }

    public LsaCandidateAnalysisActivities getAnlysActvty() {
        return anlysActvty;
    }

    public void setAnlysActvty(LsaCandidateAnalysisActivities value) {
        this.anlysActvty = value;
    }

    public Array<TaskRequirementTarget> getTaskReq() {
        if (taskReq == null) {
            taskReq = new Array<TaskRequirementTarget>();
        }
        return this.taskReq;
    }

    public Array<Object> getTaskTargetNonAbstractClasses() {
        if (taskTargetNonAbstractClasses == null) {
            taskTargetNonAbstractClasses = new Array<Object>();
        }
        return this.taskTargetNonAbstractClasses;
    }

    public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
        return docs;
    }

    public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
        this.docs = value;
    }

    public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
        return rmks;
    }

    public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
        this.rmks = value;
    }

    public ZoneElementRevision.DmgAnlys getDmgAnlys() {
        return dmgAnlys;
    }

    public void setDmgAnlys(ZoneElementRevision.DmgAnlys value) {
        this.dmgAnlys = value;
    }

    public ZoneElementRevision.FailModes getFailModes() {
        return failModes;
    }

    public void setFailModes(ZoneElementRevision.FailModes value) {
        this.failModes = value;
    }

    public ZoneElementRevision.DetectMnCaps getDetectMnCaps() {
        return detectMnCaps;
    }

    public void setDetectMnCaps(ZoneElementRevision.DetectMnCaps value) {
        this.detectMnCaps = value;
    }

    public String getUid() {
        return uid;
    }

    public void setUid(String value) {
        this.uid = value;
    }

    public CrudCodeValues getCrud() {
        if (crud == null) {
            return CrudCodeValues.I;
        } else {
            return crud;
        }
    }

    public void setCrud(CrudCodeValues value) {
        this.crud = value;
    }

    public static class DetectMnCaps {

        protected Array<DetectionMeanCapability> detectMnCap;

        public Array<DetectionMeanCapability> getDetectMnCap() {
            if (detectMnCap == null) {
                detectMnCap = new Array<DetectionMeanCapability>();
            }
            return this.detectMnCap;
        }

    }

    public static class Dmc {

        protected Array<DirectMaintenanceCost> cost;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<DirectMaintenanceCost> getCost() {
            if (cost == null) {
                cost = new Array<DirectMaintenanceCost>();
            }
            return this.cost;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class DmgAnlys {

        protected LsaCandidateTechnologyBehaviourRatingWrapper techBhvr;
        protected Array<Damage> dmg;

        public LsaCandidateTechnologyBehaviourRatingWrapper getTechBhvr() {
            return techBhvr;
        }

        public void setTechBhvr(LsaCandidateTechnologyBehaviourRatingWrapper value) {
            this.techBhvr = value;
        }

        public Array<Damage> getDmg() {
            if (dmg == null) {
                dmg = new Array<Damage>();
            }
            return this.dmg;
        }

    }

    public static class Dt {

        protected Array<DownTime> time;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<DownTime> getTime() {
            if (time == null) {
                time = new Array<DownTime>();
            }
            return this.time;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class FRate {

        protected Array<FailureRate> rate;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected Array<ZoneElementRevision.FRate.CorrFact> corrFact;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<FailureRate> getRate() {
            if (rate == null) {
                rate = new Array<FailureRate>();
            }
            return this.rate;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public Array<ZoneElementRevision.FRate.CorrFact> getCorrFact() {
            if (corrFact == null) {
                corrFact = new Array<ZoneElementRevision.FRate.CorrFact>();
            }
            return this.corrFact;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

        public static class CorrFact {

            protected double factor;
            protected CorrectionFactorJustification just;
            protected CorrectionFactorDate defDate;
            protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
            protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
            protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

            public double getFactor() {
                return factor;
            }

            public void setFactor(double value) {
                this.factor = value;
            }

            public CorrectionFactorJustification getJust() {
                return just;
            }

            public void setJust(CorrectionFactorJustification value) {
                this.just = value;
            }

            public CorrectionFactorDate getDefDate() {
                return defDate;
            }

            public void setDefDate(CorrectionFactorDate value) {
                this.defDate = value;
            }

            public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
                return docs;
            }

            public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
                this.docs = value;
            }

            public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
                return rmks;
            }

            public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
                this.rmks = value;
            }

            public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
                return applic;
            }

            public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
                this.applic = value;
            }

        }

    }

    public static class FailModes {

        protected Array<Object> failureModeNonAbstractClasses;

        public Array<Object> getFailureModeNonAbstractClasses() {
            if (failureModeNonAbstractClasses == null) {
                failureModeNonAbstractClasses = new Array<Object>();
            }
            return this.failureModeNonAbstractClasses;
        }

    }

    public static class Foh {

        protected Array<FailuresPerOperatingHour> nr;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<FailuresPerOperatingHour> getNr() {
            if (nr == null) {
                nr = new Array<FailuresPerOperatingHour>();
            }
            return this.nr;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class Lcc {

        protected Array<LifeCycleCost> cost;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<LifeCycleCost> getCost() {
            if (cost == null) {
                cost = new Array<LifeCycleCost>();
            }
            return this.cost;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class Mfop {

        protected Array<MaintenanceFreeOperatingPeriod> per;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<MaintenanceFreeOperatingPeriod> getPer() {
            if (per == null) {
                per = new Array<MaintenanceFreeOperatingPeriod>();
            }
            return this.per;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class Mmhoh {

        protected Array<MaintenanceManHoursPerOperatingHour> mh;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<MaintenanceManHoursPerOperatingHour> getMh() {
            if (mh == null) {
                mh = new Array<MaintenanceManHoursPerOperatingHour>();
            }
            return this.mh;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class Mtbf {

        protected Array<MeanTimeBetweenFailure> mt;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected Array<ZoneElementRevision.FRate.CorrFact> corrFact;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<MeanTimeBetweenFailure> getMt() {
            if (mt == null) {
                mt = new Array<MeanTimeBetweenFailure>();
            }
            return this.mt;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public Array<ZoneElementRevision.FRate.CorrFact> getCorrFact() {
            if (corrFact == null) {
                corrFact = new Array<ZoneElementRevision.FRate.CorrFact>();
            }
            return this.corrFact;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class Mtbur {

        protected Array<MeanTimeBetweenUnscheduledRemoval> mt;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<MeanTimeBetweenUnscheduledRemoval> getMt() {
            if (mt == null) {
                mt = new Array<MeanTimeBetweenUnscheduledRemoval>();
            }
            return this.mt;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class Mttr {

        protected Array<MeanTimeToRepair> mt;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<MeanTimeToRepair> getMt() {
            if (mt == null) {
                mt = new Array<MeanTimeToRepair>();
            }
            return this.mt;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class Rplt {

        protected Array<ReplacementTime> time;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<ReplacementTime> getTime() {
            if (time == null) {
                time = new Array<ReplacementTime>();
            }
            return this.time;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class SmInt {

        protected Array<ScheduledMaintenanceInterval> _int;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<ScheduledMaintenanceInterval> getInt() {
            if (_int == null) {
                _int = new Array<ScheduledMaintenanceInterval>();
            }
            return this._int;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class Spt {

        protected Array<ShopProcessingTime> time;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<ShopProcessingTime> getTime() {
            if (time == null) {
                time = new Array<ShopProcessingTime>();
            }
            return this.time;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

    public static class SrvLife {

        protected Array<ProductServiceLife> life;
        protected KeyPerformanceIndicatorMethod kpiMthd;
        protected KeyPerformanceIndicatorStatus kpiStatus;
        protected KeyPerformanceIndicatorPercentile kpiPctl;
        protected DownTime.OrgInfos orgInfos;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
        protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
        protected s6000t.taskTrainAnalysis.ProductName.Applic applic;

        public Array<ProductServiceLife> getLife() {
            if (life == null) {
                life = new Array<ProductServiceLife>();
            }
            return this.life;
        }

        public KeyPerformanceIndicatorMethod getKpiMthd() {
            return kpiMthd;
        }

        public void setKpiMthd(KeyPerformanceIndicatorMethod value) {
            this.kpiMthd = value;
        }

        public KeyPerformanceIndicatorStatus getKpiStatus() {
            return kpiStatus;
        }

        public void setKpiStatus(KeyPerformanceIndicatorStatus value) {
            this.kpiStatus = value;
        }

        public KeyPerformanceIndicatorPercentile getKpiPctl() {
            return kpiPctl;
        }

        public void setKpiPctl(KeyPerformanceIndicatorPercentile value) {
            this.kpiPctl = value;
        }

        public DownTime.OrgInfos getOrgInfos() {
            return orgInfos;
        }

        public void setOrgInfos(DownTime.OrgInfos value) {
            this.orgInfos = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
            return docs;
        }

        public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
            this.docs = value;
        }

        public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
            return rmks;
        }

        public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
            this.rmks = value;
        }

        public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
            return applic;
        }

        public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
            this.applic = value;
        }

    }

	public ZoneElementRevision() {
		super("http://asd-europe.org/", "ZoneElementRevision");
	}

}
