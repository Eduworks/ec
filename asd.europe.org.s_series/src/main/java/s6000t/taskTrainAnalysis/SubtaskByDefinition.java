/**
 *
 * Generated by JaxbToStjsAssimilater.
 * Assimilation Date: Mon Jul 29 11:33:22 CDT 2019
 *
 **/

package s6000t.taskTrainAnalysis;

import org.cassproject.schema.general.EcRemoteLinkedData;
import org.stjs.javascript.Array;

public class SubtaskByDefinition extends EcRemoteLinkedData {

    protected SubtaskIdentifier subtId;
    protected SubtaskRole subtRole;
    protected SubtaskName name;
    protected InformationCode infoCode;
    protected SubtaskDescription subtDescr;
    protected SubtaskDuration duration;
    protected SubtaskMaintenanceLocation maintLoc;
    protected Array<SubtaskEndItemObjectiveState> eiObjState;
    protected Array<s6000t.taskTrainAnalysis.SubtaskByExternalReference.AccParam> accParam;
    protected Array<Object> subtaskCircuitBreakerSettingsNonAbstractClasses;
    protected Array<SubtaskWarningCautionNote> wcn;
    protected SubtaskTimeline precSubt;
    protected Array<SubtaskInZone> inZone;
    protected Array<SubtaskTarget> subtTgt;
    protected s6000t.taskTrainAnalysis.OperationalTask.Secs secs;
    protected s6000t.taskTrainAnalysis.ConditionInstance.Docs docs;
    protected s6000t.taskTrainAnalysis.ConditionInstance.Rmks rmks;
    protected s6000t.taskTrainAnalysis.ProductName.Applic applic;
    protected s6000t.taskTrainAnalysis.TaskRevision.Resources resources;
    protected String uid;
    protected String uri;
    protected CrudCodeValues crud;

    public SubtaskIdentifier getSubtId() {
        return subtId;
    }

    public void setSubtId(SubtaskIdentifier value) {
        this.subtId = value;
    }

    public SubtaskRole getSubtRole() {
        return subtRole;
    }

    public void setSubtRole(SubtaskRole value) {
        this.subtRole = value;
    }

    public SubtaskName getName() {
        return name;
    }

    public void setName(SubtaskName value) {
        this.name = value;
    }

    public InformationCode getInfoCode() {
        return infoCode;
    }

    public void setInfoCode(InformationCode value) {
        this.infoCode = value;
    }

    public SubtaskDescription getSubtDescr() {
        return subtDescr;
    }

    public void setSubtDescr(SubtaskDescription value) {
        this.subtDescr = value;
    }

    public SubtaskDuration getDuration() {
        return duration;
    }

    public void setDuration(SubtaskDuration value) {
        this.duration = value;
    }

    public SubtaskMaintenanceLocation getMaintLoc() {
        return maintLoc;
    }

    public void setMaintLoc(SubtaskMaintenanceLocation value) {
        this.maintLoc = value;
    }

    public Array<SubtaskEndItemObjectiveState> getEiObjState() {
        if (eiObjState == null) {
            eiObjState = new Array<SubtaskEndItemObjectiveState>();
        }
        return this.eiObjState;
    }

    public Array<s6000t.taskTrainAnalysis.SubtaskByExternalReference.AccParam> getAccParam() {
        if (accParam == null) {
            accParam = new Array<s6000t.taskTrainAnalysis.SubtaskByExternalReference.AccParam>();
        }
        return this.accParam;
    }

    public Array<Object> getSubtaskCircuitBreakerSettingsNonAbstractClasses() {
        if (subtaskCircuitBreakerSettingsNonAbstractClasses == null) {
            subtaskCircuitBreakerSettingsNonAbstractClasses = new Array<Object>();
        }
        return this.subtaskCircuitBreakerSettingsNonAbstractClasses;
    }

    public Array<SubtaskWarningCautionNote> getWcn() {
        if (wcn == null) {
            wcn = new Array<SubtaskWarningCautionNote>();
        }
        return this.wcn;
    }

    public SubtaskTimeline getPrecSubt() {
        return precSubt;
    }

    public void setPrecSubt(SubtaskTimeline value) {
        this.precSubt = value;
    }

    public Array<SubtaskInZone> getInZone() {
        if (inZone == null) {
            inZone = new Array<SubtaskInZone>();
        }
        return this.inZone;
    }

    public Array<SubtaskTarget> getSubtTgt() {
        if (subtTgt == null) {
            subtTgt = new Array<SubtaskTarget>();
        }
        return this.subtTgt;
    }

    public s6000t.taskTrainAnalysis.OperationalTask.Secs getSecs() {
        return secs;
    }

    public void setSecs(s6000t.taskTrainAnalysis.OperationalTask.Secs value) {
        this.secs = value;
    }

    public s6000t.taskTrainAnalysis.ConditionInstance.Docs getDocs() {
        return docs;
    }

    public void setDocs(s6000t.taskTrainAnalysis.ConditionInstance.Docs value) {
        this.docs = value;
    }

    public s6000t.taskTrainAnalysis.ConditionInstance.Rmks getRmks() {
        return rmks;
    }

    public void setRmks(s6000t.taskTrainAnalysis.ConditionInstance.Rmks value) {
        this.rmks = value;
    }

    public s6000t.taskTrainAnalysis.ProductName.Applic getApplic() {
        return applic;
    }

    public void setApplic(s6000t.taskTrainAnalysis.ProductName.Applic value) {
        this.applic = value;
    }

    public s6000t.taskTrainAnalysis.TaskRevision.Resources getResources() {
        return resources;
    }

    public void setResources(s6000t.taskTrainAnalysis.TaskRevision.Resources value) {
        this.resources = value;
    }

    public String getUid() {
        return uid;
    }

    public void setUid(String value) {
        this.uid = value;
    }

    public String getUri() {
        return uri;
    }

    public void setUri(String value) {
        this.uri = value;
    }

    public CrudCodeValues getCrud() {
        if (crud == null) {
            return CrudCodeValues.I;
        } else {
            return crud;
        }
    }

    public void setCrud(CrudCodeValues value) {
        this.crud = value;
    }

	public SubtaskByDefinition() {
		super("http://asd-europe.org/", "SubtaskByDefinition");
	}

}
