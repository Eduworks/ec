/**
 *
 * Generated by JaxbToStjsAssimilater.
 * Assimilation Date: Thu Aug 22 12:47:53 CDT 2019
 *
 **/

package s3000l;

import org.cassproject.schema.general.EcRemoteLinkedData;
import org.stjs.javascript.Array;

public class InitialTimeLimit extends EcRemoteLinkedData {

    protected Array<InitialTimeLimit.Thld> thld;
    protected SamplingDefinition samplByDef;
    protected SamplingDefinitionByValue samplByValue;
    protected SamplingDefinitionByRatio samplByRo;
    protected String uid;
    protected CrudCodeValues crud;

    public Array<InitialTimeLimit.Thld> getThld() {
        if (thld == null) {
            thld = new Array<InitialTimeLimit.Thld>();
        }
        return this.thld;
    }

    public SamplingDefinition getSamplByDef() {
        return samplByDef;
    }

    public void setSamplByDef(SamplingDefinition value) {
        this.samplByDef = value;
    }

    public SamplingDefinitionByValue getSamplByValue() {
        return samplByValue;
    }

    public void setSamplByValue(SamplingDefinitionByValue value) {
        this.samplByValue = value;
    }

    public SamplingDefinitionByRatio getSamplByRo() {
        return samplByRo;
    }

    public void setSamplByRo(SamplingDefinitionByRatio value) {
        this.samplByRo = value;
    }

    public String getUid() {
        return uid;
    }

    public void setUid(String value) {
        this.uid = value;
    }

    public CrudCodeValues getCrud() {
        if (crud == null) {
            return CrudCodeValues.I;
        } else {
            return crud;
        }
    }

    public void setCrud(CrudCodeValues value) {
        this.crud = value;
    }

    public static class Thld {

        protected ParameterThresholdDefinition paramThld;
        protected TaskThresholdDefinition taskThld;
        protected SpecialEventThresholdDefinition sEvntThld;
        protected FailureModeThresholdDefinition fmThld;

        public ParameterThresholdDefinition getParamThld() {
            return paramThld;
        }

        public void setParamThld(ParameterThresholdDefinition value) {
            this.paramThld = value;
        }

        public TaskThresholdDefinition getTaskThld() {
            return taskThld;
        }

        public void setTaskThld(TaskThresholdDefinition value) {
            this.taskThld = value;
        }

        public SpecialEventThresholdDefinition getSEvntThld() {
            return sEvntThld;
        }

        public void setSEvntThld(SpecialEventThresholdDefinition value) {
            this.sEvntThld = value;
        }

        public FailureModeThresholdDefinition getFmThld() {
            return fmThld;
        }

        public void setFmThld(FailureModeThresholdDefinition value) {
            this.fmThld = value;
        }

    }

	public InitialTimeLimit() {
		super("http://www.asd-europe.org/s-series/s3000l", "InitialTimeLimit");
	}

}
