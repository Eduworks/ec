/**
 *
 * Generated by JaxbToStjsAssimilater.
 * Assimilation Date: Mon Jul 29 11:33:20 CDT 2019
 *
 **/

package s3000l;

import org.cassproject.schema.general.EcRemoteLinkedData;
import org.stjs.javascript.Array;

public class Message extends EcRemoteLinkedData {

    protected MessageIdentifier msgId;
    protected MessageCreationDate msgDate;
    protected LanguageCodeValues msgLang;
    protected MessageContentStatus msgStatus;
    protected Array<MessageSender> msgSend;
    protected Array<MessageReceiver> msgReceive;
    protected MessageContext msgContext;
    protected MessageContent msgContent;
    protected Array<MessageRelationship> relatedMsg;
    protected OperationalTask.Secs secs;
    protected ConditionInstance.Rmks rmks;
    protected String uid;
    protected CrudCodeValues crud;

    public MessageIdentifier getMsgId() {
        return msgId;
    }

    public void setMsgId(MessageIdentifier value) {
        this.msgId = value;
    }

    public MessageCreationDate getMsgDate() {
        return msgDate;
    }

    public void setMsgDate(MessageCreationDate value) {
        this.msgDate = value;
    }

    public LanguageCodeValues getMsgLang() {
        return msgLang;
    }

    public void setMsgLang(LanguageCodeValues value) {
        this.msgLang = value;
    }

    public MessageContentStatus getMsgStatus() {
        return msgStatus;
    }

    public void setMsgStatus(MessageContentStatus value) {
        this.msgStatus = value;
    }

    public Array<MessageSender> getMsgSend() {
        if (msgSend == null) {
            msgSend = new Array<MessageSender>();
        }
        return this.msgSend;
    }

    public Array<MessageReceiver> getMsgReceive() {
        if (msgReceive == null) {
            msgReceive = new Array<MessageReceiver>();
        }
        return this.msgReceive;
    }

    public MessageContext getMsgContext() {
        return msgContext;
    }

    public void setMsgContext(MessageContext value) {
        this.msgContext = value;
    }

    public MessageContent getMsgContent() {
        return msgContent;
    }

    public void setMsgContent(MessageContent value) {
        this.msgContent = value;
    }

    public Array<MessageRelationship> getRelatedMsg() {
        if (relatedMsg == null) {
            relatedMsg = new Array<MessageRelationship>();
        }
        return this.relatedMsg;
    }

    public OperationalTask.Secs getSecs() {
        return secs;
    }

    public void setSecs(OperationalTask.Secs value) {
        this.secs = value;
    }

    public ConditionInstance.Rmks getRmks() {
        return rmks;
    }

    public void setRmks(ConditionInstance.Rmks value) {
        this.rmks = value;
    }

    public String getUid() {
        return uid;
    }

    public void setUid(String value) {
        this.uid = value;
    }

    public CrudCodeValues getCrud() {
        if (crud == null) {
            return CrudCodeValues.I;
        } else {
            return crud;
        }
    }

    public void setCrud(CrudCodeValues value) {
        this.crud = value;
    }

	public Message() {
		super("http://www.asd-europe.org/s-series/s3000l", "Message");
	}

}
