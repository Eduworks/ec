/**
 *
 * Generated by JaxbToStjsAssimilater.
 * Assimilation Date: Thu Aug 22 12:47:55 CDT 2019
 *
 **/

package s3000l;

import org.cassproject.schema.general.EcRemoteLinkedData;
import org.stjs.javascript.Array;

public class TaskRequirementRevision extends EcRemoteLinkedData {

    protected TaskRequirementRevisionIdentifier trRevId;
    protected TaskRequirementRevisionChangeDescription revChangeDescr;
    protected TaskRequirementDate revDate;
    protected TaskRequirementDescription trDescr;
    protected TaskRequirementDecision trDecision;
    protected Array<TaskRequirementSpecialResourceRequirement> specResReq;
    protected Array<TaskRequirementJustification> trJust;
    protected Array<ChangeRequestSource> changeReq;
    protected s3000l.ConditionInstance.Docs docs;
    protected s3000l.ConditionInstance.Rmks rmks;
    protected String uid;
    protected CrudCodeValues crud;

    public TaskRequirementRevisionIdentifier getTrRevId() {
        return trRevId;
    }

    public void setTrRevId(TaskRequirementRevisionIdentifier value) {
        this.trRevId = value;
    }

    public TaskRequirementRevisionChangeDescription getRevChangeDescr() {
        return revChangeDescr;
    }

    public void setRevChangeDescr(TaskRequirementRevisionChangeDescription value) {
        this.revChangeDescr = value;
    }

    public TaskRequirementDate getRevDate() {
        return revDate;
    }

    public void setRevDate(TaskRequirementDate value) {
        this.revDate = value;
    }

    public TaskRequirementDescription getTrDescr() {
        return trDescr;
    }

    public void setTrDescr(TaskRequirementDescription value) {
        this.trDescr = value;
    }

    public TaskRequirementDecision getTrDecision() {
        return trDecision;
    }

    public void setTrDecision(TaskRequirementDecision value) {
        this.trDecision = value;
    }

    public Array<TaskRequirementSpecialResourceRequirement> getSpecResReq() {
        if (specResReq == null) {
            specResReq = new Array<TaskRequirementSpecialResourceRequirement>();
        }
        return this.specResReq;
    }

    public Array<TaskRequirementJustification> getTrJust() {
        if (trJust == null) {
            trJust = new Array<TaskRequirementJustification>();
        }
        return this.trJust;
    }

    public Array<ChangeRequestSource> getChangeReq() {
        if (changeReq == null) {
            changeReq = new Array<ChangeRequestSource>();
        }
        return this.changeReq;
    }

    public s3000l.ConditionInstance.Docs getDocs() {
        return docs;
    }

    public void setDocs(s3000l.ConditionInstance.Docs value) {
        this.docs = value;
    }

    public s3000l.ConditionInstance.Rmks getRmks() {
        return rmks;
    }

    public void setRmks(s3000l.ConditionInstance.Rmks value) {
        this.rmks = value;
    }

    public String getUid() {
        return uid;
    }

    public void setUid(String value) {
        this.uid = value;
    }

    public CrudCodeValues getCrud() {
        if (crud == null) {
            return CrudCodeValues.I;
        } else {
            return crud;
        }
    }

    public void setCrud(CrudCodeValues value) {
        this.crud = value;
    }

	public TaskRequirementRevision() {
		super("http://www.asd-europe.org/s-series/s3000l", "TaskRequirementRevision");
	}

}
